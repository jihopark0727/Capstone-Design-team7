{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\capstone_project\\\\Capstone-Design-team7\\\\src\\\\main\\\\front\\\\src\\\\pages\\\\EmotionDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ClientInfo from '../components/ClientInfo';\nimport GptSummary from '../components/GptSummary';\nimport EmotionGraph from '../components/EmotionGraph';\nimport axios from 'axios';\nimport './EmotionDashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmotionDashboard = () => {\n  _s();\n  const [activeMenu, setActiveMenu] = useState('상담 정보');\n  const [isFirstVisit, setIsFirstVisit] = useState(true);\n  const [sessions, setSessions] = useState([]); // 회기 데이터 상태\n  const [selectedTranscript, setSelectedTranscript] = useState(null); // 선택된 축어록 데이터\n  const [showTranscriptModal, setShowTranscriptModal] = useState(false); // 축어록 모달 상태\n  const [showEmotionGraphModal, setShowEmotionGraphModal] = useState(false); // 감정 그래프 모달 상태\n\n  // Mock Data (백엔드가 없을 때 사용하는 임시 데이터)\n  const mockSessions = [{\n    id: 1,\n    date: '2024-11-13 14:00',\n    transcript: '축어록 1',\n    emotionWave: '감정 파도 1'\n  }, {\n    id: 2,\n    date: '2024-11-14 15:30',\n    transcript: '축어록 2',\n    emotionWave: '감정 파도 2'\n  }];\n  const mockTranscriptData = [{\n    speaker: '내담자',\n    text: '안녕하세요. 요즘 스트레스를 많이 받고 있어요.'\n  }, {\n    speaker: '상담사',\n    text: '안녕하세요. 스트레스의 원인이 무엇인지 이야기해볼까요?'\n  }, {\n    speaker: '내담자',\n    text: '일과 가족 문제 때문에요.'\n  }];\n  const mockEmotionGraphData = {\n    // 임시 감정 그래프 데이터\n    happiness: 30,\n    sadness: 20,\n    anger: 10,\n    fear: 15,\n    surprise: 25\n  };\n  useEffect(() => {\n    const hasVisited = localStorage.getItem('hasVisitedDashboard');\n    if (hasVisited) {\n      setIsFirstVisit(false);\n    }\n  }, []);\n  useEffect(() => {\n    const fetchSessions = async () => {\n      try {\n        setSessions(mockSessions);\n      } catch (error) {\n        console.error('회기별 데이터를 가져오는 중 오류 발생:', error);\n        setSessions(mockSessions);\n      }\n    };\n    fetchSessions();\n  }, []);\n  const handleMenuClick = menu => {\n    setActiveMenu(menu);\n  };\n  const handleStartDashboard = () => {\n    setIsFirstVisit(false);\n    localStorage.setItem('hasVisitedDashboard', 'true');\n  };\n  const openTranscriptModal = sessionId => {\n    setSelectedTranscript(mockTranscriptData);\n    setShowTranscriptModal(true);\n  };\n  const closeTranscriptModal = () => {\n    setShowTranscriptModal(false);\n    setSelectedTranscript(null);\n  };\n  const openEmotionGraphModal = () => {\n    setShowEmotionGraphModal(true);\n  };\n  const closeEmotionGraphModal = () => {\n    setShowEmotionGraphModal(false);\n  };\n  if (isFirstVisit) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"onboarding\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uAC10\\uC815 \\uB300\\uC2DC\\uBCF4\\uB4DC\\uC5D0 \\uC624\\uC2E0 \\uAC83\\uC744 \\uD658\\uC601\\uD569\\uB2C8\\uB2E4!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC774 \\uB300\\uC2DC\\uBCF4\\uB4DC\\uC5D0\\uC11C\\uB294 \\uB0B4\\uB2F4\\uC790\\uC758 \\uAC10\\uC815 \\uC0C1\\uD0DC\\uB97C \\uC2DC\\uAC01\\uC801\\uC73C\\uB85C \\uD655\\uC778\\uD558\\uACE0 \\uBD84\\uC11D\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC8FC\\uC694 \\uAE30\\uB2A5:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\uB0B4\\uB2F4\\uC790 \\uC815\\uBCF4 \\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\uAC10\\uC815 \\uBCC0\\uD654 \\uADF8\\uB798\\uD504\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartDashboard,\n          className: \"start-button\",\n          children: \"\\uC2DC\\uC791\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(ClientInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-container\",\n          children: ['상담 정보', '회기별 정보'].map(menu => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `menu-button ${activeMenu === menu ? 'active' : ''}`,\n            onClick: () => handleMenuClick(menu),\n            children: menu\n          }, menu, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [activeMenu === '상담 정보' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-grid\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid-row\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\uC778\\uC801\\uC0AC\\uD56D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-and-graph\",\n            children: [/*#__PURE__*/_jsxDEV(GptSummary, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(EmotionGraph, {\n              data: mockEmotionGraphData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), activeMenu === '회기별 정보' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: sessions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uB4F1\\uB85D\\uB41C \\uD68C\\uAE30 \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this) : sessions.map((session, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formitem\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-1\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-2024-11-13-oooo\",\n                  children: session.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"divider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"verbatim-button\",\n                  onClick: () => openTranscriptModal(session.id),\n                  children: session.transcript\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"emotiongraph-button-1\",\n                  onClick: openEmotionGraphModal,\n                  children: session.emotionWave\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), showTranscriptModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-modal\",\n          onClick: closeTranscriptModal,\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uCD95\\uC5B4\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-content\",\n          children: selectedTranscript.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [item.speaker, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), \" \", item.text]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this), showEmotionGraphModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-modal\",\n          onClick: closeEmotionGraphModal,\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EmotionGraph, {\n          data: mockEmotionGraphData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(EmotionDashboard, \"hGqisKXzX6d4Kobo4gXWf5rRpb4=\");\n_c = EmotionDashboard;\nexport default EmotionDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmotionDashboard\");","map":{"version":3,"names":["React","useState","useEffect","ClientInfo","GptSummary","EmotionGraph","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","EmotionDashboard","_s","activeMenu","setActiveMenu","isFirstVisit","setIsFirstVisit","sessions","setSessions","selectedTranscript","setSelectedTranscript","showTranscriptModal","setShowTranscriptModal","showEmotionGraphModal","setShowEmotionGraphModal","mockSessions","id","date","transcript","emotionWave","mockTranscriptData","speaker","text","mockEmotionGraphData","happiness","sadness","anger","fear","surprise","hasVisited","localStorage","getItem","fetchSessions","error","console","handleMenuClick","menu","handleStartDashboard","setItem","openTranscriptModal","sessionId","closeTranscriptModal","openEmotionGraphModal","closeEmotionGraphModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","data","length","session","index","item","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/바탕 화면/capstone_project/Capstone-Design-team7/src/main/front/src/pages/EmotionDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ClientInfo from '../components/ClientInfo';\r\nimport GptSummary from '../components/GptSummary';\r\nimport EmotionGraph from '../components/EmotionGraph';\r\nimport axios from 'axios';\r\nimport './EmotionDashboard.css';\r\n\r\nconst EmotionDashboard = () => {\r\n  const [activeMenu, setActiveMenu] = useState('상담 정보');\r\n  const [isFirstVisit, setIsFirstVisit] = useState(true);\r\n  const [sessions, setSessions] = useState([]); // 회기 데이터 상태\r\n  const [selectedTranscript, setSelectedTranscript] = useState(null); // 선택된 축어록 데이터\r\n  const [showTranscriptModal, setShowTranscriptModal] = useState(false); // 축어록 모달 상태\r\n  const [showEmotionGraphModal, setShowEmotionGraphModal] = useState(false); // 감정 그래프 모달 상태\r\n\r\n  // Mock Data (백엔드가 없을 때 사용하는 임시 데이터)\r\n  const mockSessions = [\r\n    {\r\n      id: 1,\r\n      date: '2024-11-13 14:00',\r\n      transcript: '축어록 1',\r\n      emotionWave: '감정 파도 1',\r\n    },\r\n    {\r\n      id: 2,\r\n      date: '2024-11-14 15:30',\r\n      transcript: '축어록 2',\r\n      emotionWave: '감정 파도 2',\r\n    },\r\n  ];\r\n\r\n  const mockTranscriptData = [\r\n    { speaker: '내담자', text: '안녕하세요. 요즘 스트레스를 많이 받고 있어요.' },\r\n    { speaker: '상담사', text: '안녕하세요. 스트레스의 원인이 무엇인지 이야기해볼까요?' },\r\n    { speaker: '내담자', text: '일과 가족 문제 때문에요.' },\r\n  ];\r\n\r\n  const mockEmotionGraphData = {\r\n    // 임시 감정 그래프 데이터\r\n    happiness: 30,\r\n    sadness: 20,\r\n    anger: 10,\r\n    fear: 15,\r\n    surprise: 25,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const hasVisited = localStorage.getItem('hasVisitedDashboard');\r\n    if (hasVisited) {\r\n      setIsFirstVisit(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchSessions = async () => {\r\n      try {\r\n        setSessions(mockSessions);\r\n      } catch (error) {\r\n        console.error('회기별 데이터를 가져오는 중 오류 발생:', error);\r\n        setSessions(mockSessions);\r\n      }\r\n    };\r\n\r\n    fetchSessions();\r\n  }, []);\r\n\r\n  const handleMenuClick = (menu) => {\r\n    setActiveMenu(menu);\r\n  };\r\n\r\n  const handleStartDashboard = () => {\r\n    setIsFirstVisit(false);\r\n    localStorage.setItem('hasVisitedDashboard', 'true');\r\n  };\r\n\r\n  const openTranscriptModal = (sessionId) => {\r\n    setSelectedTranscript(mockTranscriptData);\r\n    setShowTranscriptModal(true);\r\n  };\r\n\r\n  const closeTranscriptModal = () => {\r\n    setShowTranscriptModal(false);\r\n    setSelectedTranscript(null);\r\n  };\r\n\r\n  const openEmotionGraphModal = () => {\r\n    setShowEmotionGraphModal(true);\r\n  };\r\n\r\n  const closeEmotionGraphModal = () => {\r\n    setShowEmotionGraphModal(false);\r\n  };\r\n\r\n  if (isFirstVisit) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"onboarding\">\r\n          <h1>감정 대시보드에 오신 것을 환영합니다!</h1>\r\n          <p>이 대시보드에서는 내담자의 감정 상태를 시각적으로 확인하고 분석할 수 있습니다.</p>\r\n          <p>주요 기능:</p>\r\n          <ul>\r\n            <li>내담자 정보 확인</li>\r\n            <li>감정 변화 그래프</li>\r\n          </ul>\r\n          <button onClick={handleStartDashboard} className=\"start-button\">\r\n            시작하기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"dashboard-content\">\r\n        <div className=\"left-sidebar\">\r\n          <ClientInfo />\r\n          <div className=\"menu-container\">\r\n            {['상담 정보', '회기별 정보'].map((menu) => (\r\n              <button\r\n                key={menu}\r\n                className={`menu-button ${activeMenu === menu ? 'active' : ''}`}\r\n                onClick={() => handleMenuClick(menu)}\r\n              >\r\n                {menu}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"main-content\">\r\n          {activeMenu === '상담 정보' && (\r\n            <>\r\n              <div className=\"data-grid\">\r\n                <div className=\"grid-row\">\r\n                  <p>인적사항</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"summary-and-graph\">\r\n                <GptSummary />\r\n                <EmotionGraph data={mockEmotionGraphData} /> {/* 임시 데이터 전달 */}\r\n              </div>\r\n            </>\r\n          )}\r\n          {activeMenu === '회기별 정보' && (\r\n            <div className=\"list\">\r\n              {sessions.length === 0 ? (\r\n                <p>등록된 회기 데이터가 없습니다.</p>\r\n              ) : (\r\n                sessions.map((session, index) => (\r\n                  <div className=\"formitem\" key={index}>\r\n                    <div className=\"time\">\r\n                      <div className=\"time-1\">\r\n                        <div className=\"text-2024-11-13-oooo\">{session.date}</div>\r\n                      </div>\r\n                      <div className=\"divider\"></div>\r\n                    </div>\r\n                    <div className=\"task\">\r\n                      <div className=\"task-1\">\r\n                        <div\r\n                          className=\"verbatim-button\"\r\n                          onClick={() => openTranscriptModal(session.id)}\r\n                        >\r\n                          {session.transcript}\r\n                        </div>\r\n                        <div\r\n                          className=\"emotiongraph-button-1\"\r\n                          onClick={openEmotionGraphModal}\r\n                        >\r\n                          {session.emotionWave}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 모달: 축어록 */}\r\n      {showTranscriptModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <button className=\"close-modal\" onClick={closeTranscriptModal}>\r\n              ✖\r\n            </button>\r\n            <h2>축어록</h2>\r\n            <div className=\"transcript-content\">\r\n              {selectedTranscript.map((item, index) => (\r\n                <div key={index} className=\"transcript-item\">\r\n                  <strong>{item.speaker}:</strong> {item.text}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 모달: 감정 그래프 */}\r\n      {showEmotionGraphModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <button className=\"close-modal\" onClick={closeEmotionGraphModal}>\r\n              ✖\r\n            </button>\r\n            <EmotionGraph data={mockEmotionGraphData} /> {/* 임시 데이터 전달 */}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmotionDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}