{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\capstone_project\\\\Capstone-Design-team7\\\\src\\\\main\\\\front\\\\src\\\\pages\\\\FileUploadModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './FileUploadModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUploadPage({\n  onClose\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [clients, setClients] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  const [selectedClient, setSelectedClient] = useState('');\n  const [isDirectClientInput, setIsDirectClientInput] = useState(false);\n  const [directClientInput, setDirectClientInput] = useState('');\n  const [selectedSession, setSelectedSession] = useState('');\n  const [isDirectSessionInput, setIsDirectSessionInput] = useState(false);\n  const [directSessionInput, setDirectSessionInput] = useState('');\n  const [isUploading, setIsUploading] = useState(false); // 업로드 진행 상태\n\n  // 내담자 목록 불러오기\n  useEffect(() => {\n    const fetchClients = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('/api/clients/assigned-client-names', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const clientNames = response.data.data;\n        setClients(clientNames);\n      } catch (error) {\n        console.error('내담자 목록 불러오기 실패:', error);\n        setClients([]);\n      }\n    };\n    fetchClients();\n  }, []);\n  const handleClientChange = async e => {\n    const value = e.target.value;\n    setSelectedClient(value);\n    if (value === 'direct') {\n      setIsDirectClientInput(true);\n      setSessions([]);\n      setSelectedSession('');\n    } else {\n      setIsDirectClientInput(false);\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`/api/sessions/client/${value}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const sessionsData = response.data.data;\n        setSessions(sessionsData.map(session => session.name));\n        setSelectedSession(`${sessionsData.length + 1}회차`);\n      } catch (error) {\n        console.error('세션 목록 불러오기 실패:', error);\n        setSessions([]);\n        setSelectedSession('1회차');\n      }\n    }\n  };\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  // 파일 업로드 처리\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert('파일을 선택해주세요.');\n      return;\n    }\n    const allowedExtensions = ['mp3', 'wav', 'm4a'];\n    const fileExtension = selectedFile.name.split('.').pop().toLowerCase();\n    const maxSize = 20 * 1024 * 1024; // 20MB\n\n    if (!allowedExtensions.includes(fileExtension)) {\n      alert('지원하지 않는 파일 형식입니다. MP3, WAV, M4A 파일만 업로드 가능합니다.');\n      return;\n    }\n    if (selectedFile.size > maxSize) {\n      alert('파일 크기가 20MB를 초과합니다.');\n      return;\n    }\n    const client = isDirectClientInput ? directClientInput : selectedClient;\n    const session = isDirectSessionInput ? directSessionInput : selectedSession;\n    if (!client) {\n      alert('내담자를 선택하거나 입력해주세요.');\n      return;\n    }\n    if (!session) {\n      alert('회기를 선택하거나 입력해주세요.');\n      return;\n    }\n    const clientId = client; // 실제 clientId 값 확인 필요\n    const sessionNumber = session.replace(/[^0-9]/g, ''); // 숫자로 변환\n\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    formData.append('clientId', clientId); // 필요 시 추가\n    formData.append('sessionNumber', sessionNumber); // 필요 시 추가\n\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('로그인이 필요합니다.');\n      navigate('/login');\n      return;\n    }\n    try {\n      setIsUploading(true);\n      const response = await axios.post(`/api/sessions/${clientId}/${sessionNumber}/analyze-recording`, formData, {\n        headers: {\n          Authorization: `Bearer ${token}` // Content-Type 자동 설정\n        }\n      });\n      if (response.status === 200) {\n        alert('파일 업로드 및 분석이 완료되었습니다.');\n        navigate('/analysis-results', {\n          state: {\n            reportId: response.data.reportId\n          }\n        });\n      }\n    } catch (error) {\n      console.error('파일 업로드 실패:', error);\n      if (error.response && error.response.status === 403) {\n        alert('요청이 거부되었습니다. 입력값을 확인하거나 다시 로그인해주세요.');\n      } else {\n        alert('파일 업로드 중 오류가 발생했습니다.');\n      }\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const handleSessionChange = e => {\n    const value = e.target.value;\n    if (value === 'direct') {\n      setIsDirectSessionInput(true);\n      setSelectedSession('');\n    } else {\n      setIsDirectSessionInput(false);\n      setSelectedSession(value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: isUploading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-page\",\n      children: \"\\uD30C\\uC77C\\uC744 \\uBD84\\uC11D \\uC911\\uC785\\uB2C8\\uB2E4. \\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text--\",\n        children: \"\\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file-input\",\n          onChange: handleFileChange,\n          className: \"file-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-input\",\n          className: \"text------\",\n          children: \"\\uD30C\\uC77C\\uC744 \\uC5C5\\uB85C\\uB4DC\\uD558\\uB824\\uBA74 \\uD074\\uB9AD\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text---mp3-wav\",\n          children: \"\\uC9C0\\uC6D0 \\uD655\\uC7A5\\uC790: MP3, WAV, m4a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text----20mb\",\n          children: \"\\uD30C\\uC77C \\uCD5C\\uB300 \\uC0AC\\uC774\\uC988: 20MB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdowns-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"dropdown-select\",\n            onChange: handleClientChange,\n            value: isDirectClientInput ? 'direct' : selectedClient,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"\\uB0B4\\uB2F4\\uC790 \\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this), clients.map((client, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: client,\n              children: client\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 37\n            }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"direct\",\n              children: \"\\uC9C1\\uC811 \\uC785\\uB825\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), isDirectClientInput && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"direct-input\",\n            placeholder: \"\\uB0B4\\uB2F4\\uC790 \\uC774\\uB984 \\uC785\\uB825\",\n            value: directClientInput,\n            onChange: e => setDirectClientInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"dropdown-select\",\n            onChange: handleSessionChange,\n            value: isDirectSessionInput ? 'direct' : selectedSession,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"\\uD68C\\uAE30 \\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this), sessions.length === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\\uD68C\\uCC28\",\n              children: \"1\\uD68C\\uCC28\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 37\n            }, this) : sessions.map((session, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: session,\n              children: session\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 41\n            }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"direct\",\n              children: \"\\uC9C1\\uC811 \\uC785\\uB825\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this), isDirectSessionInput && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"direct-input\",\n            placeholder: \"\\uD68C\\uAE30 \\uC815\\uBCF4 \\uC785\\uB825\",\n            value: directSessionInput,\n            onChange: e => setDirectSessionInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        onClick: handleUpload,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-\",\n          children: \"\\uC5C5\\uB85C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n_s(FileUploadPage, \"G1JET91yqjsBU8lywuq6EQPTTbE=\", false, function () {\n  return [useNavigate];\n});\n_c = FileUploadPage;\nexport default FileUploadPage;\nvar _c;\n$RefreshReg$(_c, \"FileUploadPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","FileUploadPage","onClose","_s","navigate","selectedFile","setSelectedFile","clients","setClients","sessions","setSessions","selectedClient","setSelectedClient","isDirectClientInput","setIsDirectClientInput","directClientInput","setDirectClientInput","selectedSession","setSelectedSession","isDirectSessionInput","setIsDirectSessionInput","directSessionInput","setDirectSessionInput","isUploading","setIsUploading","fetchClients","token","localStorage","getItem","response","get","headers","Authorization","clientNames","data","error","console","handleClientChange","e","value","target","sessionsData","map","session","name","length","handleFileChange","files","handleUpload","alert","allowedExtensions","fileExtension","split","pop","toLowerCase","maxSize","includes","size","client","clientId","sessionNumber","replace","formData","FormData","append","post","status","state","reportId","handleSessionChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","id","onChange","htmlFor","disabled","index","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/User/capstone_project/Capstone-Design-team7/src/main/front/src/pages/FileUploadModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './FileUploadModal.css';\r\n\r\nfunction FileUploadPage({ onClose }) {\r\n    const navigate = useNavigate();\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [clients, setClients] = useState([]);\r\n    const [sessions, setSessions] = useState([]);\r\n    const [selectedClient, setSelectedClient] = useState('');\r\n    const [isDirectClientInput, setIsDirectClientInput] = useState(false);\r\n    const [directClientInput, setDirectClientInput] = useState('');\r\n    const [selectedSession, setSelectedSession] = useState('');\r\n    const [isDirectSessionInput, setIsDirectSessionInput] = useState(false);\r\n    const [directSessionInput, setDirectSessionInput] = useState('');\r\n    const [isUploading, setIsUploading] = useState(false); // 업로드 진행 상태\r\n\r\n    // 내담자 목록 불러오기\r\n    useEffect(() => {\r\n        const fetchClients = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const response = await axios.get('/api/clients/assigned-client-names', {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                });\r\n\r\n                const clientNames = response.data.data;\r\n                setClients(clientNames);\r\n            } catch (error) {\r\n                console.error('내담자 목록 불러오기 실패:', error);\r\n                setClients([]);\r\n            }\r\n        };\r\n\r\n        fetchClients();\r\n    }, []);\r\n\r\n    const handleClientChange = async (e) => {\r\n        const value = e.target.value;\r\n        setSelectedClient(value);\r\n\r\n        if (value === 'direct') {\r\n            setIsDirectClientInput(true);\r\n            setSessions([]);\r\n            setSelectedSession('');\r\n        } else {\r\n            setIsDirectClientInput(false);\r\n\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const response = await axios.get(`/api/sessions/client/${value}`, {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                });\r\n\r\n                const sessionsData = response.data.data;\r\n                setSessions(sessionsData.map((session) => session.name));\r\n                setSelectedSession(`${sessionsData.length + 1}회차`);\r\n            } catch (error) {\r\n                console.error('세션 목록 불러오기 실패:', error);\r\n                setSessions([]);\r\n                setSelectedSession('1회차');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        setSelectedFile(e.target.files[0]);\r\n    };\r\n\r\n    // 파일 업로드 처리\r\n    const handleUpload = async () => {\r\n        if (!selectedFile) {\r\n            alert('파일을 선택해주세요.');\r\n            return;\r\n        }\r\n\r\n        const allowedExtensions = ['mp3', 'wav', 'm4a'];\r\n        const fileExtension = selectedFile.name.split('.').pop().toLowerCase();\r\n        const maxSize = 20 * 1024 * 1024; // 20MB\r\n\r\n        if (!allowedExtensions.includes(fileExtension)) {\r\n            alert('지원하지 않는 파일 형식입니다. MP3, WAV, M4A 파일만 업로드 가능합니다.');\r\n            return;\r\n        }\r\n\r\n        if (selectedFile.size > maxSize) {\r\n            alert('파일 크기가 20MB를 초과합니다.');\r\n            return;\r\n        }\r\n\r\n        const client = isDirectClientInput ? directClientInput : selectedClient;\r\n        const session = isDirectSessionInput ? directSessionInput : selectedSession;\r\n\r\n        if (!client) {\r\n            alert('내담자를 선택하거나 입력해주세요.');\r\n            return;\r\n        }\r\n\r\n        if (!session) {\r\n            alert('회기를 선택하거나 입력해주세요.');\r\n            return;\r\n        }\r\n\r\n        const clientId = client; // 실제 clientId 값 확인 필요\r\n        const sessionNumber = session.replace(/[^0-9]/g, ''); // 숫자로 변환\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', selectedFile);\r\n        formData.append('clientId', clientId); // 필요 시 추가\r\n        formData.append('sessionNumber', sessionNumber); // 필요 시 추가\r\n\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            alert('로그인이 필요합니다.');\r\n            navigate('/login');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setIsUploading(true);\r\n\r\n            const response = await axios.post(\r\n                `/api/sessions/${clientId}/${sessionNumber}/analyze-recording`,\r\n                formData,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`, // Content-Type 자동 설정\r\n                    },\r\n                }\r\n            );\r\n\r\n            if (response.status === 200) {\r\n                alert('파일 업로드 및 분석이 완료되었습니다.');\r\n                navigate('/analysis-results', { state: { reportId: response.data.reportId } });\r\n            }\r\n        } catch (error) {\r\n            console.error('파일 업로드 실패:', error);\r\n            if (error.response && error.response.status === 403) {\r\n                alert('요청이 거부되었습니다. 입력값을 확인하거나 다시 로그인해주세요.');\r\n            } else {\r\n                alert('파일 업로드 중 오류가 발생했습니다.');\r\n            }\r\n        } finally {\r\n            setIsUploading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSessionChange = (e) => {\r\n        const value = e.target.value;\r\n        if (value === 'direct') {\r\n            setIsDirectSessionInput(true);\r\n            setSelectedSession('');\r\n        } else {\r\n            setIsDirectSessionInput(false);\r\n            setSelectedSession(value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            {isUploading ? (\r\n                <div className=\"loading-page\">파일을 분석 중입니다. 잠시만 기다려주세요...</div>\r\n            ) : (\r\n                <div className=\"file-upload-page\">\r\n                    <button className=\"close-button\" onClick={onClose}>\r\n                        ×\r\n                    </button>\r\n                    <div className=\"text--\">파일 업로드</div>\r\n                    <div className=\"container3\">\r\n                        <input\r\n                            type=\"file\"\r\n                            id=\"file-input\"\r\n                            onChange={handleFileChange}\r\n                            className=\"file-input\"\r\n                        />\r\n                        <label htmlFor=\"file-input\" className=\"text------\">\r\n                            파일을 업로드하려면 클릭하세요.\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"file-info\">\r\n                        <span className=\"text---mp3-wav\">지원 확장자: MP3, WAV, m4a</span>\r\n                        <span className=\"text----20mb\">파일 최대 사이즈: 20MB</span>\r\n                    </div>\r\n                    <div className=\"dropdowns-row\">\r\n                        <div className=\"dropdown\">\r\n                            <select\r\n                                className=\"dropdown-select\"\r\n                                onChange={handleClientChange}\r\n                                value={isDirectClientInput ? 'direct' : selectedClient}\r\n                            >\r\n                                <option value=\"\" disabled>\r\n                                    내담자 선택\r\n                                </option>\r\n                                {clients.map((client, index) => (\r\n                                    <option key={index} value={client}>\r\n                                        {client}\r\n                                    </option>\r\n                                ))}\r\n                                <option value=\"direct\">직접 입력</option>\r\n                            </select>\r\n                            {isDirectClientInput && (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"direct-input\"\r\n                                    placeholder=\"내담자 이름 입력\"\r\n                                    value={directClientInput}\r\n                                    onChange={(e) => setDirectClientInput(e.target.value)}\r\n                                />\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"dropdown\">\r\n                            <select\r\n                                className=\"dropdown-select\"\r\n                                onChange={handleSessionChange}\r\n                                value={isDirectSessionInput ? 'direct' : selectedSession}\r\n                            >\r\n                                <option value=\"\" disabled>\r\n                                    회기 선택\r\n                                </option>\r\n                                {sessions.length === 0 ? (\r\n                                    <option value=\"1회차\">1회차</option>\r\n                                ) : (\r\n                                    sessions.map((session, index) => (\r\n                                        <option key={index} value={session}>\r\n                                            {session}\r\n                                        </option>\r\n                                    ))\r\n                                )}\r\n                                <option value=\"direct\">직접 입력</option>\r\n                            </select>\r\n                            {isDirectSessionInput && (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"direct-input\"\r\n                                    placeholder=\"회기 정보 입력\"\r\n                                    value={directSessionInput}\r\n                                    onChange={(e) => setDirectSessionInput(e.target.value)}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button\" onClick={handleUpload}>\r\n                        <div className=\"text-\">업로드</div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileUploadPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}