{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\capstone_project\\\\Capstone-Design-team7\\\\src\\\\main\\\\front\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport SignUpModal from './SignUpModal'; // 모달 컴포넌트 추가\nimport './LoginForm.css'; // 로그인 스타일\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm({\n  setIsLoggedIn\n}) {\n  _s();\n  // props로 setIsLoggedIn 받음\n\n  console.log('setIsLoggedIn:', typeof setIsLoggedIn); // \"function\"이어야 정상\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false); // 모달 상태 관리\n  const [signUpData, setSignUpData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    phoneNumber: ''\n  });\n  const navigate = useNavigate();\n\n  // 로그인 처리\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      var _response$data;\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.result) {\n        var _response$data$data, _response$data$data$c, _response$data$data2;\n        alert('로그인 성공');\n        const name = (_response$data$data = response.data.data) === null || _response$data$data === void 0 ? void 0 : (_response$data$data$c = _response$data$data.counselor) === null || _response$data$data$c === void 0 ? void 0 : _response$data$data$c.name;\n        const token = (_response$data$data2 = response.data.data) === null || _response$data$data2 === void 0 ? void 0 : _response$data$data2.token;\n        if (name) localStorage.setItem('name', name);\n        if (token) localStorage.setItem('token', token);\n        setIsLoggedIn(true); // 로그인 상태 업데이트\n        navigate('/upload'); // 이동\n      } else {\n        throw new Error('로그인 실패: 서버에서 인증 거부'); // 명확한 에러 처리\n      }\n    } catch (error) {\n      console.error('로그인 요청 오류:', error); // 에러 로그 추가\n      alert('로그인 오류: 서버 문제 또는 네트워크 오류가 발생했습니다.');\n    }\n  };\n\n  // 회원가입 처리\n  const handleSignUp = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8080/api/auth/signUp', signUpData);\n      if (response.data.result) {\n        alert('회원가입이 완료되었습니다.');\n        setIsModalOpen(false);\n      } else {\n        alert('회원가입에 실패했습니다.');\n      }\n    } catch (error) {\n      alert('회원가입 오류');\n    }\n  };\n\n  // 회원가입 입력값 핸들러\n  const handleSignUpChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSignUpData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"signup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              required: true,\n              className: \"input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true,\n              className: \"input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-\",\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"others\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"signup-link\",\n            onClick: () => setIsModalOpen(true) // 회원가입 모달 열기\n            ,\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SignUpModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      signUpData: signUpData,\n      handleChange: handleSignUpChange,\n      handleSubmit: handleSignUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginForm, \"yFtunPlIQVhr/Bblg/dQTN7rrAQ=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","useNavigate","SignUpModal","jsxDEV","_jsxDEV","LoginForm","setIsLoggedIn","_s","console","log","email","setEmail","password","setPassword","isModalOpen","setIsModalOpen","signUpData","setSignUpData","name","phoneNumber","navigate","handleLogin","e","preventDefault","_response$data","response","post","data","result","_response$data$data","_response$data$data$c","_response$data$data2","alert","counselor","token","localStorage","setItem","Error","error","handleSignUp","handleSignUpChange","value","target","prevData","children","onSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","required","onClick","isOpen","onClose","handleChange","handleSubmit","_c","$RefreshReg$"],"sources":["C:/Users/User/capstone_project/Capstone-Design-team7/src/main/front/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SignUpModal from './SignUpModal'; // 모달 컴포넌트 추가\r\nimport './LoginForm.css'; // 로그인 스타일\r\n\r\nfunction LoginForm({ setIsLoggedIn }) { // props로 setIsLoggedIn 받음\r\n\r\n    console.log('setIsLoggedIn:', typeof setIsLoggedIn); // \"function\"이어야 정상\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isModalOpen, setIsModalOpen] = useState(false); // 모달 상태 관리\r\n    const [signUpData, setSignUpData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        phoneNumber: '',\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    // 로그인 처리\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('/api/auth/login', { email, password });\r\n\r\n            if (response.data?.result) {\r\n                alert('로그인 성공');\r\n                const name = response.data.data?.counselor?.name;\r\n                const token = response.data.data?.token;\r\n\r\n                if (name) localStorage.setItem('name', name);\r\n                if (token) localStorage.setItem('token', token);\r\n\r\n                setIsLoggedIn(true); // 로그인 상태 업데이트\r\n                navigate('/upload'); // 이동\r\n            } else {\r\n                throw new Error('로그인 실패: 서버에서 인증 거부'); // 명확한 에러 처리\r\n            }\r\n        } catch (error) {\r\n            console.error('로그인 요청 오류:', error); // 에러 로그 추가\r\n            alert('로그인 오류: 서버 문제 또는 네트워크 오류가 발생했습니다.');\r\n        }\r\n    };\r\n\r\n\r\n    // 회원가입 처리\r\n    const handleSignUp = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/api/auth/signUp', signUpData);\r\n            if (response.data.result) {\r\n                alert('회원가입이 완료되었습니다.');\r\n                setIsModalOpen(false);\r\n            } else {\r\n                alert('회원가입에 실패했습니다.');\r\n            }\r\n        } catch (error) {\r\n            alert('회원가입 오류');\r\n        }\r\n    };\r\n\r\n    // 회원가입 입력값 핸들러\r\n    const handleSignUpChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setSignUpData((prevData) => ({ ...prevData, [name]: value }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* 로그인 폼 */}\r\n            <form onSubmit={handleLogin} className=\"signup\">\r\n                <div className=\"signup-1\">\r\n                    <div className=\"inputs\">\r\n                        <div className=\"input\">\r\n                            <label htmlFor=\"email\" className=\"email\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                required\r\n                                className=\"input-field\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-1\">\r\n                            <label htmlFor=\"password\" className=\"password\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                required\r\n                                className=\"input-field\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"button\">\r\n                        <span className=\"text-\">로그인</span>\r\n                    </button>\r\n                    <div className=\"others\">\r\n                    <span\r\n                        className=\"signup-link\"\r\n                        onClick={() => setIsModalOpen(true)} // 회원가입 모달 열기\r\n                    >\r\n                        회원가입\r\n                    </span>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            {/* 회원가입 모달 */}\r\n            <SignUpModal\r\n                isOpen={isModalOpen}\r\n                onClose={() => setIsModalOpen(false)}\r\n                signUpData={signUpData}\r\n                handleChange={handleSignUpChange}\r\n                handleSubmit={handleSignUp}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}